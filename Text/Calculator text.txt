// globals
Button[] numButtons = new Button[10];
Button[]opButtons = new Button [14];
String dVal;
String op;
boolean left;
float r;
float l;
float result;
int currentNum = 0;



void setup() {
  size(200, 250); // compact
  dVal ="0";
  op = "";
  left = true;
  r = 0.0;
  l = 0.0;
  numButtons[0] = new Button(40, 230, 80, 40, "0", #FFFDFC, #2AF50C);

  numButtons[1] = new Button(20, 110, 40, 40, "7", #FFFDFC, #2AF50C);
  numButtons[2] = new Button(60, 110, 40, 40, "8", #FFFDFC, #2AF50C);
  numButtons[3] = new Button(100, 110, 40, 40, "9", #FFFDFC, #2AF50C);
  numButtons[4] = new Button(20, 150, 40, 40, "4", #FFFDFC, #2AF50C);
  numButtons[5] = new Button(60, 150, 40, 40, "5", #FFFDFC, #2AF50C);
  numButtons[6] = new Button(100, 150, 40, 40, "6", #FFFDFC, #2AF50C);
  numButtons[7] = new Button(20, 190, 40, 40, "1", #FFFDFC, #2AF50C);
  numButtons[8] = new Button(60, 190, 40, 40, "2", #FFFDFC, #2AF50C);
  numButtons[9] = new Button(100, 190, 40, 40, "3", #FFFDFC, #2AF50C);

  opButtons[0] = new Button(20, 70, 40, 40, "AC", #898584, #2AF50C);
  opButtons[1] = new Button(180, 230, 40, 40, "=", #F5A40C, #2AF50C);
  opButtons[2] = new Button(60, 70, 40, 40, "+/-", #898584, #2AF50C);
  opButtons[3] = new Button(100, 70, 40, 40, "%", #898584, #2AF50C);
  opButtons[4] = new Button(140, 70, 40, 40, "/", #898584, #2AF50C);
  opButtons[5] = new Button(180, 70, 40, 40, "x²", #F5A40C, #2AF50C);
  opButtons[6] = new Button(140, 110, 40, 40, "*", #FFFDFC, #2AF50C);
  opButtons[7] = new Button(180, 110, 40, 40, "±", #F5A40C, #2AF50C);
  opButtons[8] = new Button(140, 150, 40, 40, "-", #FFFDFC, #2AF50C);
  opButtons[9] = new Button(180, 150, 40, 40, "cos", #F5A40C, #2AF50C);
  opButtons[10] = new Button(140, 190, 40, 40, "+", #FFFDFC, #2AF50C);
  opButtons[11] = new Button(180, 190, 40, 40, "tan", #F5A40C, #2AF50C);
  opButtons[12] = new Button(100, 230, 40, 40, ".", #FFFDFC, #2AF50C);
  opButtons[13] = new Button(140, 230, 40, 40, "π", #FFFDFC, #2AF50C);
}



void draw() {
  background(0);
  // show calculator display
  updateDisplay();
  //display and hover buttons
  for (int i=0; i<numButtons.length; i++) {
    numButtons[i].hover(mouseX, mouseY);
    numButtons[i].display();
  }
  for (int i=0; i<opButtons.length; i++) {
    opButtons[i].hover(mouseX, mouseY);
    opButtons[i].display();
  }
}



void updateDisplay() {

  rectMode(CORNER);
  fill(222);
  rect(0, 0, width, 50);
  fill(0);
  textAlign(RIGHT);


  if (dVal.length()<13) {
    textSize(24);
  } else if (dVal.length()<14) {
    textSize(22);
  } else if (dVal.length()<15) {
    textSize(20);
  } else if (dVal.length()<17) {
    textSize(18);
  } else if (dVal.length()<19) {
    textSize(16);
  } else if (dVal.length()<21) {
    textSize(14);
  } else if (dVal.length()<23) {
    textSize(12);
  } else if (dVal.length()<25) {
    textSize(10);
  } else {
    textSize(14);
  }
  text(dVal, width-15, 50);
  fill(127);
  rectMode(CORNER);
  rect(10, 250, width-20, 52);
  textSize(9);
  textAlign(LEFT);
  fill(255);
  text("L:" +l +"R:" +r + "Op:" + op, 15, 263);
  text("Result:" +result +"Left:" +left, 15, 275);
}

void mouseReleased() {





  for (int i=0; i<numButtons.length; i++) {
    if (numButtons[i].over && dVal.length()<20) {
    }
  }

  for (int i=0; i<opButtons.length; i++) {
    if (opButtons[i].over) {
      handleEvent(opButtons[i].val, false);
    }
  }


  for (int i=0; i<numButtons.length; i++) {
    if (numButtons[i].over && dVal.length()<20) {
      if (left) {
        if (dVal.equals("0")) {
          dVal = (numButtons[i].val);
          l = float(dVal);
        } else {
          dVal += (numButtons[i].val);
          l = float(dVal);
        }
      } else {
        if (dVal.equals("0")) {
          dVal = (numButtons[i].val);
          r = float(dVal);
        } else {
          dVal += (numButtons[i].val);
          r = float(dVal);
        }
      }
    }
  }



  for (int i=0; i<opButtons.length; i++) {
    if (opButtons[i].over && opButtons[i].val.equals("AC")) {
      dVal = "0";
      result =0.0;
      left = true;
      r = 0.0;
      l = 0.0;
      op = "";
    } else if (opButtons[i].over && opButtons[i].val.equals("+")) {
      if (!left) {
        performCalc();
      } else {
        op = "+";
        left = false;
        dVal= "0";
      }
    } else if (opButtons[i].over && opButtons[i].val.equals("=")) {
      performCalc();
    } else if (opButtons[i].over && opButtons[i].val.equals("+/-")) {
      if (left) {
        l *= -1;
        dVal = str(l);
      } else {
        r *= -1;
        left = false;
        dVal = str(r);
      }
    } else if (opButtons[i].over && opButtons[i].val.equals("*")) {
      if (!left) {
        performCalc();
      } else {
        op = "*";
        left = false;
        dVal= "0";
      }
    } else if (opButtons[i].over && opButtons[i].val.equals("/")) {
      if (!left) {
        performCalc();
      } else {
        op = "/";
        left = false;
        dVal= "0";
      }
    } else if (opButtons[i].over && opButtons[i].val.equals(".") && !dVal.contains(".")) {
      dVal += (opButtons[i].val);
    }
  }
} 


void keyPressed() {
  println("KEY:" + key + "keyCode:" + keyCode); 

  if (key == '0') {
    handleEvent("0", true);
  } else if (key == '1') {
    handleEvent("1", true);
  } else if (key == '2') {
    handleEvent("2", true);
  } else if (key == '3') {
    handleEvent("3", true);
  } else if (key == '4') {
    handleEvent("4", true);
  } else if (key == '5') {
    handleEvent("5", true);
  } else if (key == '6') {
    handleEvent("6", true);
  } else if (key == '7') {
    handleEvent("7", true);
  } else if (key == '8') {
    handleEvent("8", true);
  } else if (key == '9') {
    handleEvent("9", true);
  } else if (key == '+') {
    handleEvent("+", false);
  } else if (key == '-') {
    handleEvent("-", false);
  } else if (key == '*') {
    handleEvent("x", false);
  } else if (key == '/') {
    handleEvent("/", false);
  } else if (key == '.') {
    handleEvent(".", false);
  } else if (key == 'C') {
    handleEvent("C", false);
  } else if (key == 10) { //(key == CODED) {
    if (keyCode == ENTER || keyCode == RETURN) {
      handleEvent("=", false);
    }
  } else if (keyCode == 27) {
    key = 0;
    if (key == 0) {
      handleEvent("C", false);
    }
  }
}
String handleEvent(String val, boolean num) {
  if (left && num) {
    if (dVal.equals("0") || result == l) {
      dVal = (val);
      l = float(dVal);
    } else {
      dVal += (val);
      l = float(dVal);
    }
  } else if (!left && num) {
    if (dVal.equals("0") || result == 1) {
      dVal = (val);
      r = float(dVal);
    } else {
      dVal += (val);
      r = float(dVal);
    }
  } else if (val.equals("C")) {
    dVal = "0";
    result = 0.0;
    left = true;
    r= 0.0;
    l = 0.0;
    op = "";
  } else if (val.equals("+")) {
    if (!left) {
      performCalc();
    } else {
      op = "+";
      left = false;
      dVal = "0";
    }
  } else if (val.equals("-")) {
    op = "-";
    left = false;
    dVal = "0";
  } else if (val.equals("x")) {
    op = "x";
    left = false;
    dVal = "0";
  } else if (val.equals("÷")) {
    op = "÷";
    left = false;
    dVal = "0";
  } else if (val.equals("%")) {
    if (left) {
      l *= 0.1;
      dVal = str(l);
    } else {
      r *= 0.1;
      dVal = str(r);
    }
  } else if (val.equals("±")) {
    if (left) {
      l *= -1;
      dVal = str(l);
    } else {
      r *= -1;
      dVal = str(r);
    }
  } else if (val.equals("x²")) {
    if (left) {
      l = sq(l);
      dVal = str(l);
    } else {
      r = sq(r);
      dVal = str(r);
    }
  } else if (val.equals("√")) {
    if (left) {
      l = sqrt(l);
      dVal = str(l);
    } else {
      r = sqrt(r);
      dVal = str(r);
    }
  } else if (val.equals("sin")) {
    if (left) {
      l = sin(radians(l));
      dVal = str(l);
    } else {
      r = sin(radians(r));
      dVal = str(r);
    }
  } else if (val.equals("cos")) {
    if (left) {
      l = cos(radians(l));
      dVal = str(l);
    } else {
      r = cos(radians(r));
      dVal = str(r);
    }
  } else if (val.equals("Rand")) {
    if (left) {
      l = random(0, 1);
      dVal = str(l);
    } else {
      r = random(0, 1);
      dVal = str(r);
    }
  } else if (val.equals(".") && !dVal.contains(".")) {
    dVal += (val);
  } else if (val.equals("=")) {
    performCalc();
  }
  return val;
}



void performCalc() {
  if (op.equals("+")) {
    result = l + r;
  } else if (op.equals("-")) {
    result = l - r;
  } else if (op.equals("*")) {
    result = l * r;
  } else if (op.equals("/")) {
    result = l / r;
  }
  l = result;
  dVal = str(result);
  left = true;
}
class Button {
  // member variables
  int x, y, w, h;
  String val;
  boolean over;
  color c1, c2;

  // constructor
  Button(int x, int y, int w, int h, String val, color c1, color c2) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.val = val;
    this.c1 = c1;
    this.c2 = c2;
  }

  // Display the button
  void display() {
    if (over) {
      fill(c2);
    } else {
      fill(c1);
    }
    rectMode(CENTER);
    rect(x, y, w, h);
    textAlign(CENTER);
    fill(0);
    textSize(14);
    text(val, x, y+5);
  }

  // give behavoir
  void hover(int tempX, int tempY) {
    over = tempX>x && tempX<x+w  && tempY>y  && tempY<y+h;
  }
}
